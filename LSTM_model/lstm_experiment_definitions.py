# lstm_experiment_definitions.py
import math
import copy
from lstm_experiment_utils import (
    gen_lstm_experim,
    create_multi_seed_lstm_experiments,
    create_multi_lr_lstm_experiments,
    create_multi_lr_experiments,
    gen_lstm_experim,
    calculate_lstm_params,
    get_lstm_base_config,
)

NARROW_LR_SWEEP = [
    10 ** (-2.5),
    10 ** (-2),
    10 ** (-1.5),
    1e-1,
]


LSTM_LR_SWEEP = [10 ** (-2), 10 ** (-1.5), 10 ** (-1)]

# LSTM_VARIATIONS = (
#     gen_lstm_experim(
#         32,
#         label="32melis_nodroplr-2bs64",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10**-2,
#         input_dropout=0.0,
#         hidden_dropout=0.0,
#         output_dropout=0.0,
#         between_layers_dropout=0.0,
#         optimizer="adam",
#         adam_beta1=0.0,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         weight_decay=1e-4,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         use_streaming=True,
#         streaming_reset_prob=0.01,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
#     + gen_lstm_experim(
#         32,
#         label="32melis_lowdrop_lr-2bs64adamstand",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10**-2,
#         input_dropout=0.2,
#         hidden_dropout=0.05,
#         output_dropout=0.2,
#         between_layers_dropout=0.3,
#         optimizer="adam",
#         adam_beta1=0.9,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         weight_decay=1e-4,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         use_streaming=True,
#         streaming_reset_prob=0.01,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
#     + gen_lstm_experim(
#         32,
#         label="32melis_lowdrop_lr-2bs16",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10**-2,
#         input_dropout=0.2,
#         hidden_dropout=0.05,
#         output_dropout=0.2,
#         between_layers_dropout=0.3,
#         optimizer="adam",
#         adam_beta1=0.0,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         weight_decay=1e-4,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
#     + gen_lstm_experim(
#         32,
#         label="32melis_lowdrop_lr15bs128",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10 ** (-1.5),
#         input_dropout=0.2,
#         hidden_dropout=0.05,
#         output_dropout=0.2,
#         between_layers_dropout=0.3,
#         optimizer="adam",
#         adam_beta1=0.0,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         weight_decay=1e-4,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
#     + gen_lstm_experim(
#         32,
#         label="32melis_lr2bs64",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10**-2,
#         input_dropout=0.2,
#         hidden_dropout=0.05,
#         output_dropout=0.02,
#         between_layers_dropout=0.0,
#         optimizer="adam",
#         adam_beta1=0.0,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         weight_decay=1e-4,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         use_streaming=True,
#         streaming_reset_prob=0.01,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
#     + gen_lstm_experim(
#         32,
#         label="32melis_lr2bs64sgd",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10**-2,
#         input_dropout=0.2,
#         hidden_dropout=0.05,
#         output_dropout=0.02,
#         between_layers_dropout=0.0,
#         optimizer="sgd",
#         weight_decay=1e-4,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         use_streaming=True,
#         streaming_reset_prob=0.01,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
#     + gen_lstm_experim(
#         32,
#         label="32melis_lr2bs64wd0_nodrop",
#         folder_name="lstm_scale_doctor",
#         learning_rate=10**-2,
#         input_dropout=0.0,
#         hidden_dropout=0.0,
#         output_dropout=0.0,
#         between_layers_dropout=0.0,
#         optimizer="adam",
#         adam_beta1=0.0,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         weight_decay=0,
#         warmup_frac=0.05,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         use_streaming=True,
#         streaming_reset_prob=0.01,
#         target_effective_batch_size=128,
#         num_layers=1,
#     )
# )


# MELIS_SCALING = (
#     gen_lstm_experim(
#         32,
#         label="32melis_steam",
#         folder_name="lstm_scaling   _diagnostic",
#         learning_rate=10 ** -(1.5),
#         input_dropout=0.0,
#         hidden_dropout=0.0,
#         output_dropout=0.0,
#         between_layers_dropout=0.0,
#         optimizer="adam",
#         adam_beta1=0.0,
#         adam_beta2=0.999,
#         adam_epsilon=1e-9,
#         use_tbptt=True,
#         tbptt_length=32,
#         tbptt_stride=32,
#         tbptt_reset_hidden=False,
#         use_streaming=True,
#         streaming_reset_prob=0.01,
#         target_effective_batch_size=64,
#         num_layers=2,
#     )


MELIS_SCALING = (
    gen_lstm_experim(
        32,
        label="32melis_stream",
        folder_name="lstm_scaling_study",
        learning_rate=10 ** -(2),
        between_layers_dropout=0.0,
        optimizer="adam",
    )
    + gen_lstm_experim(
        48,
        label="48melis_stream",
        folder_name="lstm_scaling_study",
        learning_rate=10**-2,
        optimizer="adam",
    )
    + gen_lstm_experim(
        64,
        label="64melis_stream",
        folder_name="lstm_scaling_study",
        learning_rate=10**-2,
    )
    + gen_lstm_experim(
        80,
        label="80melis_stream",
        folder_name="lstm_scaling_study",
        learning_rate=10**-2,
        # Removed num_layers override - let it use base config value for fair comparison
    )
    + gen_lstm_experim(
        128,
        label="128melis_stream",
        folder_name="lstm_scaling_study",
        learning_rate=10**-2,
        # Removed num_layers override - let it use base config value for fair comparison
    )
    + gen_lstm_experim(
        160,
        label="160melis_stream",
        folder_name="lstm_scaling_study",
        learning_rate=10**-2,
    )
)


CORRECTED_MELIS_SCALING = (
    # gen_lstm_experim(
    #     32,
    #     label="stuffstuffstuff",
    #     folder_name="lstm_scaling_study",
    #     learning_rate=10 ** -(1.5),
    #     input_dropout=0.0,
    #     hidden_dropout=0.0,
    #     output_dropout=0.0,
    #     between_layers_dropout=0.0,
    #     optimizer="adam",
    #     adam_beta1=0.0,
    #     adam_beta2=0.999,
    #     adam_epsilon=1e-9,
    #     weight_decay=1e-4,
    #     use_tbptt=True,
    #     tbptt_length=32,
    #     tbptt_stride=32,
    #     tbptt_reset_hidden=False,
    #     use_streaming=True,
    #     streaming_reset_prob=0.01,
    #     target_effective_batch_size=64,
    #     num_layers=2,
    # )
    # + gen_lstm_experim(
    #     64,
    #     label="64_correction_bs64",
    #     folder_name="lstm_scaling_study",
    #     learning_rate=10 ** -(1.5),
    #     input_dropout=0.0,
    #     hidden_dropout=0.0,
    #     output_dropout=0.0,
    #     between_layers_dropout=0.0,
    #     optimizer="adam",
    #     adam_beta1=0.0,
    #     adam_beta2=0.999,
    #     adam_epsilon=1e-9,
    #     weight_decay=1e-4,
    #     use_tbptt=True,
    #     tbptt_length=32,
    #     tbptt_stride=32,
    #     tbptt_reset_hidden=False,
    #     use_streaming=True,
    #     streaming_reset_prob=0.01,
    #     target_effective_batch_size=64,
    #     num_layers=2,
    # )
    # + gen_lstm_experim(
    #     96,
    #     label="96_correction_bs64",
    #     folder_name="lstm_scaling_study",
    #     learning_rate=10 ** -(1.5),
    #     input_dropout=0.0,
    #     hidden_dropout=0.0,
    #     output_dropout=0.0,
    #     between_layers_dropout=0.0,
    #     optimizer="adam",
    #     adam_beta1=0.0,
    #     adam_beta2=0.999,
    #     adam_epsilon=1e-9,
    #     weight_decay=1e-4,
    #     use_tbptt=True,
    #     tbptt_length=32,
    #     tbptt_stride=32,
    #     tbptt_reset_hidden=False,
    #     use_streaming=True,
    #     streaming_reset_prob=0.01,
    #     target_effective_batch_size=64,
    #     num_layers=2,
    # )
    # + gen_lstm_experim(
    #     128,
    #     label="128_correction_bs64",
    #     folder_name="lstm_scaling_study",
    #     learning_rate=10 ** -(2),
    #     input_dropout=0.0,
    #     hidden_dropout=0.0,
    #     output_dropout=0.0,
    #     between_layers_dropout=0.0,
    #     optimizer="adam",
    #     adam_beta1=0.0,
    #     adam_beta2=0.999,
    #     adam_epsilon=1e-9,
    #     weight_decay=1e-4,
    #     use_tbptt=True,
    #     tbptt_length=32,
    #     tbptt_stride=32,
    #     tbptt_reset_hidden=False,
    #     use_streaming=True,
    #     streaming_reset_prob=0.01,
    #     target_effective_batch_size=64,
    #     num_layers=2,
    # )
    # gen_lstm_experim(
    #     160,
    #     label="160_correction_bs64",
    #     folder_name="lstm_scaling_study",
    #     learning_rate=10 ** -(2),
    #     input_dropout=0.0,
    #     hidden_dropout=0.0,
    #     output_dropout=0.0,
    #     between_layers_dropout=0.0,
    #     optimizer="adam",
    #     adam_beta1=0.0,
    #     adam_beta2=0.999,
    #     adam_epsilon=1e-9,
    #     weight_decay=1e-4,
    #     use_tbptt=True,
    #     tbptt_length=32,
    #     tbptt_stride=32,
    #     tbptt_reset_hidden=False,
    #     use_streaming=True,
    #     streaming_reset_prob=0.01,
    #     target_effective_batch_size=64,
    #     num_layers=2,
    # )
    gen_lstm_experim(
        192,
        label="160_correction_bs64",
        folder_name="lstm_scaling_study",
        learning_rate=10 ** -(2),
        input_dropout=0.0,
        hidden_dropout=0.0,
        output_dropout=0.0,
        between_layers_dropout=0.0,
        optimizer="adam",
        adam_beta1=0.0,
        adam_beta2=0.999,
        adam_epsilon=1e-9,
        weight_decay=1e-4,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=64,
        num_layers=2,
    )
    + gen_lstm_experim(
        256,
        label="256_correction_bs64",
        folder_name="lstm_scaling_study",
        learning_rate=10 ** -(2),
        input_dropout=0.0,
        hidden_dropout=0.0,
        output_dropout=0.0,
        between_layers_dropout=0.0,
        optimizer="adam",
        adam_beta1=0.0,
        adam_beta2=0.999,
        adam_epsilon=1e-9,
        weight_decay=1e-4,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=64,
        num_layers=2,
    )
)


SGD_TUNE_LR_SWEEP = [
    10 ** (-2),
    10 ** (-1.5),
    1e-1,
    10 ** (-0.5),
]

MELIS_SCALING_SGD = (
    gen_lstm_experim(
        32,
        label="32melis_steam_sgd",
        folder_name="lstm_sgd",
        learning_rate=10 ** (-0.5),
        input_dropout=0.0,
        hidden_dropout=0.0,
        output_dropout=0.0,
        between_layers_dropout=0.0,
        optimizer="sgd",
        sgd_momentum=0.0,
        weight_decay=0,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=32,
        num_layers=2,
        grad_clip=5.0,
    )
    + gen_lstm_experim(
        48,
        label="48melis_steam_sgd",
        folder_name="lstm_sgd",
        learning_rate=10 ** (-0.5),
        input_dropout=0.0,
        hidden_dropout=0.0,
        output_dropout=0.0,
        between_layers_dropout=0.0,
        optimizer="sgd",
        sgd_momentum=0.0,
        weight_decay=0,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=32,
        num_layers=2,
        grad_clip=5.0,
    )
    + gen_lstm_experim(
        64,
        label="64melis_steam_sgd",
        folder_name="lstm_sgd",
        learning_rate=10 ** (-0.5),
        input_dropout=0.0,
        hidden_dropout=0.0,
        output_dropout=0.0,
        between_layers_dropout=0.0,
        optimizer="sgd",
        sgd_momentum=0.0,
        weight_decay=0,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=32,
        num_layers=2,
        grad_clip=5.0,
    )
    + gen_lstm_experim(
        80,
        label="80melis_steam_sgd",
        folder_name="lstm_sgd",
        learning_rate=10 ** (-0.5),
        input_dropout=0.2,
        hidden_dropout=0.05,
        output_dropout=0.2,
        between_layers_dropout=0.0,
        optimizer="sgd",
        sgd_momentum=0.0,
        weight_decay=0,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=32,
        num_layers=2,
        grad_clip=5.0,
        # Removed num_layers override - let it use base config value for fair comparison
    )
    + gen_lstm_experim(
        128,
        label="128melis_stream_sgd",
        folder_name="lstm_sgd",
        learning_rate=10 ** (-0.5),
        input_dropout=0,
        hidden_dropout=0,
        output_dropout=0,
        between_layers_dropout=0.0,
        optimizer="sgd",
        sgd_momentum=0.0,
        weight_decay=0,
        use_tbptt=True,
        tbptt_length=32,
        tbptt_stride=32,
        tbptt_reset_hidden=False,
        use_streaming=True,
        streaming_reset_prob=0.01,
        target_effective_batch_size=32,
        num_layers=2,
        grad_clip=5.0,
        # Removed num_layers override - let it use base config value for fair comparison
    )
)


MELIS_DEBUG = gen_lstm_experim(
    96,
    label="96_correction_bs64",
    folder_name="lstm_scaling_study",
    learning_rate=10 ** -(1.5),
    input_dropout=0.0,
    hidden_dropout=0.0,
    output_dropout=0.0,
    between_layers_dropout=0.0,
    optimizer="adam",
    adam_beta1=0.0,
    adam_beta2=0.999,
    adam_epsilon=1e-9,
    weight_decay=1e-4,
    use_tbptt=True,
    tbptt_length=32,
    tbptt_stride=32,
    tbptt_reset_hidden=False,
    use_streaming=True,
    streaming_reset_prob=0.01,
    target_effective_batch_size=64,
    num_layers=2,
)


# experiments to test


GRAND_EXPERIMENT = CORRECTED_MELIS_SCALING
